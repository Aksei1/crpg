---
- name: Set up the apt repository to use mainline nginx packages
  apt_repository:
    repo: deb http://nginx.org/packages/mainline/debian buster nginx
    state: present
    filename: nginx
    update_cache: no

- name: Add nginx package signing key to the list of trusted keys
  apt_key:
    id: 573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62
    url: https://nginx.org/keys/nginx_signing.key

- name: Install Nginx
  apt:
    name: nginx
    state: latest
    update_cache: yes

- name: Create cRPG SSL snippet file
  template:
    src: nginx-ssl-snippet.conf.j2
    dest: /etc/nginx/snippets/crpg-ssl.conf
    mode: 0644

- name: Create Nginx configuration file
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    mode: 0644

- name: Create cRPG UI virtual server configuration file
  template:
    src: "nginx-{{ crpg_domain_name }}.j2"
    dest: "/etc/nginx/sites-enabled/{{ crpg_domain_name }}"
    mode: 0644

- name: Create cRPG API virtual server configuration file
  template:
    src: "nginx-api.{{ crpg_domain_name }}.j2"
    dest: "/etc/nginx/sites-enabled/api.{{ crpg_domain_name }}"
    mode: 0644

- name: Create Nginx log rotation file
  template:
    src: nginx-logrotate.j2
    dest: /etc/logrotate.d/nginx
    mode: 0644
    owner: root
    group: root

- name: Add Nginx status module
  template:
    src: nginx-status.conf.j2
    dest: /etc/nginx/conf.d/status.conf
    mode: 0644

- name: Open HTTP port
  ufw:
    rule: allow
    port: "80"
    proto: tcp

- name: Open HTTPS port
  ufw:
    rule: allow
    port: "443"
    proto: tcp

- name: Restart Nginx
  service:
    name: nginx
    enabled: yes
    state: restarted
